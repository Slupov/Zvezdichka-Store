@using CloudinaryDotNet
@using Zvezdichka.Web.Infrastructure.Constants
@model Zvezdichka.Web.Areas.Products.Models.ProductDetailsViewModel
@{
    ViewData["Title"] = "Details";
    var newCommentMessage = "";
}

<div class="row">
    <div class="product-container col-xs-12">
        <div class="row">
            <div id="product-images" class="col-xs-12 col-sm-6 col-md-4">
                <div class="thumbnails-wrapper">
                    <div class="alternate-images col-md-6">
                        @*                    show alternate images*@
                        <ul id="piThumbList" class="col-xs-4 col-sm-12" style="list-style-type: none;">

                            @foreach (var img in Model.CloudinarySources)
                            {
                                <li class="col-sm-12">
                                    @Html.Raw(@Model.Cloudinary.Api.UrlImgUp.BuildImageTag(img, new StringDictionary()
                                    {
                                        new KeyValuePair<string, string>("class", "img-responsive thumbnail-image cloudinary-thumbnail")
                                    }))
                                </li>
                            }
                        </ul>
                    </div>
                    <div id="productImageContainer" class="col-md-6">

                        @if (Model.CloudinarySources.Count > 0)
                        {
                            @Html.Raw(@Model.Cloudinary.Api.UrlImgUp.BuildImageTag(Model.CloudinarySources.First(), new StringDictionary()
                            {
                                new KeyValuePair<string, string>("class", "img-responsive cloudinary-thumbnail"),
                                new KeyValuePair<string, string>("id", "main-image"),
                            }))
                            ;
                        }
                    </div>
                </div>
            </div>
            <div id="product-alldetails" class="col-xs-12 col-sm-6 col-md-4">
                <div class="col-xs-12 title">
                    <h3>
                        @Model.Name
                    </h3>
                </div>
                <div class="col-xs-12 price">
                    @Model.Price leva.
                </div>
                <div class="col-xs-12 product-details">
                    @Html.Raw(@Model.Description)
                </div>
                <div class="col-xs-12 product-categories">
                    Categories:
                    <ul>
                        @foreach (var category in Model.Categories)
                        {
                            <li>@category</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div>

    @if (User.Identity.IsAuthenticated)
    {
        //        Shopping
        <div class="form-group row">
            <div class="col-xs-2">
                <input type="number" id="bag-quantity" class="form-control" value="1"/>
            </div>
            <div>
                <a class="btn btn-success" onclick="addToCart('@Model.Name')">Add to Cart</a>
            </div>
            <div>
                <a asp-area="Shopping" asp-controller="Home" asp-action="Index" class="btn btn-default">Cart</a>
            </div>
        </div>

        <div>
            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
            {
                <a asp-route="@WebConstants.Routes.ProductEdit" asp-route-id="@Model.Id" asp-route-title="@Model.Name" class="btn btn-primary">Edit</a>
                @Html.Raw("| ")
            }
            <a asp-action="Index" class="btn btn-default">Back to List</a>
        </div>

        //         Leave a Comment
        <div class="form-group basic-textarea rounded-corners shadow-textarea" id="add-comment-div">
            <label for="add-comment">Shadow and placeholder</label>
            <textarea onkeypress="addCommentOnEnter('@Model.Id', '@User.Identity.Name')" class="form-control z-depth-1 comment-message" id="add-comment-message" rows="3" placeholder="Write something here..."></textarea>
        </div>

        <div class="form-group">
            <a onclick="addComment('@Model.Id', '@User.Identity.Name')" class="btn btn-default">Add Comment</a>
        </div>
    }

    <h3>Comments</h3>

    <div class="comments-container">
        <table class="table table-responsive" id="comments-table">
            <tr>
                <th>User</th>
                <th>Message</th>
                <th></th>
            </tr>

            @foreach (var item in Model.Comments)
            {
                <tr id="comment-@item.Id">
                    <td>
                        @item.User.UserName

                        <div>
                            @if (@item.IsEdited)
                            {
                                <div>
                                    <i>Edited on @item.DateEdited</i>
                                </div>
                                <div>
                                    <i>Originaly added on @item.DateEdited</i>
                                </div>
                            }
                            else
                            {
                                <p>Added on @item.DateAdded</p>
                            }

                        </div>
                    </td>
                    <td class="comment-content">
                        @item.Message
                    </td>
                    <td>
                        @if (item.User.UserName == User.Identity.Name || User.IsInRole("Admin"))
                        {
                            <div class="row">
                                <a class="btn btn-danger col-xs-5" onclick="deleteComment(this, '@item.Id')">X</a>
                                <a class="btn btn-primary col-xs-offset-1 col-xs-6" onclick="editComment('@item.Id')">Edit</a>
                            </div>
                        }
                    </td>
                </tr>
            }


            @{
                var prevDisabled = !Model.Comments.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.Comments.HasNextPage ? "disabled" : "";
            }

            @*page navigation buttons*@
            <a asp-action="Details"
               asp-route-id="@Model.Id"
               asp-route-title="@Model.Name"
               asp-route-commentsPageIndex="@(Model.Comments.PageIndex - 1)"
               class="btn btn-default @prevDisabled">
                Previous
            </a>

            @for (int i = 1; i <= Model.Comments.TotalPages; i++)
            {
                <a asp-action="Details"
                   asp-route-id="@Model.Id"
                   asp-route-title="@Model.Name"
                   asp-route-commentsPageIndex="@i"
                   class="btn btn-primary">
                    [@i]
                </a>
            }

            <a asp-action="Details"
               asp-route-id="@Model.Id"
               asp-route-title="@Model.Name"
               asp-route-commentsPageIndex="@(Model.Comments.PageIndex + 1)"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </table>
    </div>
</div>


@section Scripts{
   <script type="text/javascript">
        $(document).ready(changeThumbnailOnHover());
    </script>
}