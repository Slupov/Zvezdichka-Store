@using Microsoft.AspNetCore.Mvc.Rendering
@using Zvezdichka.Web.Infrastructure.Constants
@model Zvezdichka.Web.Areas.Products.Models.ProductIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Products</h2>

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
    {
        <a asp-action="Create" class="btn btn-success">Create New</a>
    }
</p>

<input type="hidden" id="selected-categories" value="@string.Join(",", Model.Products.SelectMany(x => x.Categories).Distinct())"/>

@*    Filters*@

@{
    var dataSliderValueMin = Model.Products.Any() ? Model.Products.Min(x => x.Price) : Model.MinPrice;
    var dataSliderValueMax = Model.Products.Any() ? Model.Products.Max(x => x.Price) : Model.MaxPrice;
}

<div class="row">
    <div id="filterPanel" class="collapse in col-xs-3">
        <br/>

        <form method="post" asp-area="Products" asp-controller="Home" asp-action="Index">

            <div>

                <h4>Filter by price interval:</h4>
                <b>@Model.MinPrice</b>
                <input name="pricerange" id="price-slider" type="text" class="span2 slider" value="" data-slider-min="@Model.MinPrice" data-slider-max="@Model.MaxPrice" data-slider-step="5" data-slider-value="[@dataSliderValueMin,@dataSliderValueMax]"/>
                <b>@Model.MaxPrice</b>

            </div>

            <div id="filters">
                <span>Sort by: </span>
                <br/>
                <select name="orderby" id="order-by" class="selectpicker" title="Choose one of the following...">
                    <option value="@((int) WebConstants.OrderBy.NameAsc)">Name [A-Z]</option>
                    <option value="@((int) WebConstants.OrderBy.NameDesc)">Name [Z-A]</option>
                    <option value="@((int) WebConstants.OrderBy.PriceAsc)">Price, Ascending</option>
                    <option value="@((int) WebConstants.OrderBy.PriceDesc)">Price, Descending</option>
                </select>
            </div>
            @{
                var categories = Model.AllCategories;
            }

            <select name="categories" id="sort-by-categories" class="selectpicker" multiple title="Choose categories...">
                @foreach (var cat in categories)
                {
                    <option value="@cat">@cat</option>
                }
            </select>

            <div>
                <input type="submit" class="btn btn-default"/>
            </div>
        </form>
        <br/>
    </div>

    @*    products grid system*@
    @if (Model.Products.Count > 0)
    {
        <div class="container-fluid products-grid col-xs-9">

            <div class="row text-center">
                @foreach (var item in Model.Products)
                {
                    @Html.Partial("ProductColumn", item)
                }
            </div>

            <div class="page-navigation-buttons">

                @{
                    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
                }

                @*page navigation buttons*@
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.Products.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @prevDisabled">
                    Previous
                </a>

                @for (int i = 1; i <= Model.Products.TotalPages; i++)
                {
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@i"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-primary">
                        [@i]
                    </a>
                }

                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.Products.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @nextDisabled">
                    Next
                </a>
            </div>
        </div>
    }
</div>


@section Scripts{
    <script>
        var priceSlider = $("#price-slider").slider({});
    </script>
}